config:
  target: 'http://localhost:3000'
  variables:
    userId: "32594501-a266-4cd6-9937-6d507725c76a"  # Replace with a real user ID from your seeded data
  phases:
    - duration: 30
      arrivalRate: 5  # Warm up with 5 requests/second
      name: Warm up
    - duration: 60
      arrivalRate: 20  # Load test with 20 requests/second
      name: Load test
    - duration: 30
      arrivalRate: 50  # Stress test with 50 requests/second
      name: Stress test
  defaults:
    headers:
      Content-Type: 'application/json'

scenarios:
  - name: 'Get all users'
    weight: 40
    flow:
      - post:
          url: '/graphql'
          json:
            query: |
              query {
                users {
                  id
                  name
                  email
                  orders {
                    id
                    status
                    totalCost
                  }
                }
              }

  - name: 'Get user with orders'
    weight: 30
    flow:
      - post:
          url: '/graphql'
          json:
            query: |
              query GetUserOrders($userId: ID!) {
                user(id: $userId) {
                  id
                  name
                  email
                  orders {
                    id
                    status
                    totalCost
                    orderItem {
                      id
                      quantity
                      unitPrice
                    }
                  }
                }
              }
            variables:
              userId: "{{ userId }}"

  - name: 'Create order'
    weight: 20
    flow:
      - post:
          url: '/graphql'
          json:
            query: |
              mutation CreateOrder($input: CreateOrderInputDTO!) {
                createOrder(input: $input) {
                  id
                  status
                  totalCost
                  userId
                  orderItem {
                    id
                    quantity
                    unitPrice
                  }
                }
              }
            variables:
              input:
                userId: "{{ userId }}"
                status: "pending"
                totalCost: 99.99
                orderItems:
                  - quantity: 2
                    unitPrice: 49.99
                  - quantity: 1
                    unitPrice: 0.01

  - name: 'Get all orders'
    weight: 10
    flow:
      - post:
          url: '/graphql'
          json:
            query: |
              query {
                orders {
                  id
                  status
                  totalCost
                  userId
                  orderItem {
                    id
                    quantity
                    unitPrice
                  }
                }
              }